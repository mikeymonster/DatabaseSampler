@model DatabaseSampler.Application.ViewModels.PostcodeLookupViewModel

@{
    ViewData["Title"] = "Caching";
}

<h1>Caching</h1>

<h2>Play around with caching.</h2>

<form method="post">
    <div class="form-group">
        <div class="input-group col-sm-2">
            <label asp-for="Postcode">Postcode</label>
            <input type="text" class="form-control" asp-for="Postcode" placeholder="Additional Info" />
            <span class="field-validation-error text-danger" 
                  asp-validation-for="Postcode">The postcode is required.</span>
        </div>
    </div>
    @if (Model.ElapsedTimeForLookup.HasValue)
    {
        <div class="form-group">
            <p>
                Time to lookup postcode: @($"{Model.ElapsedTimeForLookup.Value.TotalMilliseconds:#0.000}ms")
            </p>
            @if (Model.FoundInCache)
            {
                <p>
                    Result retrieved from cache.
                </p>
            }
        </div>
    }
<div class="form-group">
    <button type="submit" class="btn btn-primary btn-sm" asp-action="LookupPostcode">Lookup postcode</button>
    <button type="submit" class="btn btn-primary btn-sm" asp-action="LookupPostcodeWithMemoryCaching">Lookup using memory cache</button>
    <button type="submit" class="btn btn-primary btn-sm" asp-action="LookupPostcodeWithDistributedCaching">Lookup using distributed cache</button>
</div>
</form>
